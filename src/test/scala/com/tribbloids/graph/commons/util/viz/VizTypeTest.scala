package com.tribbloids.graph.commons.util.viz

import com.tribbloids.graph.commons.testlib.BaseSpec
import shapeless.{HNil, Witness}

class VizTypeTest extends BaseSpec {

  import VizTypeTest._

  it("String") {

    VizType[String].toString.shouldBe(
      """
        |-+ String .................................................................................................................. [0]
        | !-+ CharSequence
        | : !-+ Object
        | :   !-- Any
        | !-- Comparable[String]
        | :         `-+ [ 1 ARG ] :
        | :           !-- String .................................................................................................................. [0]
        | !-- java.io.Serializable
        |""".stripMargin.trim
    )
  }

  it("HList") {

    val book =
      "author" ::
        "title" ::
        HNil

    VizType
      .infer(book)
      .toString
      .shouldBe(
        """
        |-+ String :: String :: shapeless.HNil
        | :       `-+ [ 2 ARGS ] :
        | :         !-+ String .................................................................................................................. [0]
        | :         : !-+ CharSequence ............................................................................................................ [1]
        | :         : : !-+ Object .................................................................................................................. [2]
        | :         : :   !-- Any ..................................................................................................................... [3]
        | :         : !-- Comparable[String] ...................................................................................................... [4]
        | :         : :         `-+ [ 1 ARG ] :
        | :         : :           !-- String .................................................................................................................. [0]
        | :         : !-- java.io.Serializable .................................................................................................... [5]
        | :         !-+ String :: shapeless.HNil
        | :           :       `-+ [ 2 ARGS ] :
        | :           :         !-- String .................................................................................................................. [0]
        | :           :         !-+ shapeless.HNil
        | :           :           !-+ shapeless.HList ......................................................................................................... [6]
        | :           :             !-+ Serializable ............................................................................................................ [7]
        | :           :             : !-- java.io.Serializable .................................................................................................... [5]
        | :           :             !-+ Product ................................................................................................................. [8]
        | :           :             : !-- Equals .................................................................................................................. [9]
        | :           :             !-- Object .................................................................................................................. [2]
        | :           !-- shapeless.HList ......................................................................................................... [6]
        | !-- shapeless.HList ......................................................................................................... [6]
        |""".stripMargin.trim
      )
  }

  it("Singleton") {

    // TODO: doesn't work! why?
    // TODO: may use type pimp pattern
//    VizType[ww.T].toString.shouldBe()
//
//    VizType.infer(ss).toString.shouldBe()
  }
}

object VizTypeTest {

  val ww: Witness.Lt[Int] = Witness(3)

  val ss = ww.value
}
